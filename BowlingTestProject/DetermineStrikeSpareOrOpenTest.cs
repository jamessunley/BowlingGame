using System;
using BowlingGame;
using BowlingGame.FrameModel;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace BowlingTestProject
{
    [TestClass]
    public class DetermineStrikeSpareOrOpenTest
    {
        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_1_and_a_score_of_0_then_i_will_get_back_strike_bool_false()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 1, bowl2 = 0, score = 1};
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then strike bool being false
            Assert.AreEqual(false, frame.wasStrike);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_1_and_a_score_of_0_then_i_will_get_back_spare_bool_false()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 1, bowl2 = 0, score = 1 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then spare bool being false
            Assert.AreEqual(false, frame.wasSpare);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_0_and_a_score_of_1_then_i_will_get_back_strike_bool_false()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 0, bowl2 = 1, score = 1 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then strike bool being false
            Assert.AreEqual(false, frame.wasStrike);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_0_and_a_score_of_1_then_i_will_get_back_spare_bool_false()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 0, bowl2 = 1, score = 1 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then spare bool being false
            Assert.AreEqual(false, frame.wasSpare);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_1_and_a_score_of_1_then_i_will_get_back_strike_bool_false()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 1, bowl2 = 1, score = 2 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then strike bool being false
            Assert.AreEqual(false, frame.wasStrike);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_1_and_a_score_of_1_then_i_will_get_back_spare_bool_false()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 1, bowl2 = 1, score = 2 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then spare bool being false
            Assert.AreEqual(false, frame.wasSpare);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_5_and_a_score_of_4_then_i_will_get_back_strike_bool_false()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 5, bowl2 = 4, score = 9 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then strike bool being false
            Assert.AreEqual(false, frame.wasStrike);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_5_and_a_score_of_4_then_i_will_get_back_spare_bool_false()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 5, bowl2 = 4, score = 9 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then spare bool being false
            Assert.AreEqual(false, frame.wasSpare);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_9_and_a_score_of_0_then_i_will_get_back_strike_bool_false()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 9, bowl2 = 0, score = 9 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then strike bool being false
            Assert.AreEqual(false, frame.wasStrike);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_9_and_a_score_of_0_then_i_will_get_back_spare_bool_false()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 9, bowl2 = 0, score = 9 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then spare bool being false
            Assert.AreEqual(false, frame.wasSpare);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_1_and_a_score_of_8_then_i_will_get_back_strike_bool_false()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 1, bowl2 = 8, score = 9 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then strike bool being false
            Assert.AreEqual(false, frame.wasStrike);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_1_and_a_score_of_8_then_i_will_get_back_spare_bool_false()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 1, bowl2 = 8, score = 9 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then spare bool being false
            Assert.AreEqual(false, frame.wasSpare);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_0_and_a_score_of_10_then_i_will_get_back_strike_bool_false()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 0, bowl2 = 10, score = 10 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then strike bool being false
            Assert.AreEqual(false, frame.wasStrike);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_0_and_a_score_of_10_then_i_will_get_back_spare_bool_true()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 0, bowl2 = 10, score = 10 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then spare bool being true
            Assert.AreEqual(true, frame.wasSpare);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_9_and_a_score_of_1_then_i_will_get_back_strike_bool_false()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 9, bowl2 = 1, score = 10 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then strike bool being false
            Assert.AreEqual(false, frame.wasStrike);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_9_and_a_score_of_1_then_i_will_get_back_spare_bool_true()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 9, bowl2 = 1, score = 10 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then spare bool being true
            Assert.AreEqual(true, frame.wasSpare);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_5_and_a_score_of_5_then_i_will_get_back_strike_bool_false()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 5, bowl2 = 5, score = 10 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then strike bool being false
            Assert.AreEqual(false, frame.wasStrike);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_5_and_a_score_of_5_then_i_will_get_back_spare_bool_true()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 5, bowl2 = 5, score = 10 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then spare bool being true
            Assert.AreEqual(true, frame.wasSpare);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_1_and_a_score_of_9_then_i_will_get_back_strike_bool_false()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 1, bowl2 = 9, score = 10 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then strike bool being false
            Assert.AreEqual(false, frame.wasStrike);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_1_and_a_score_of_9_then_i_will_get_back_spare_bool_true()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 1, bowl2 = 9, score = 10 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then spare bool being true
            Assert.AreEqual(true, frame.wasSpare);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_10_and_a_score_of_0_then_i_will_get_back_strike_bool_true()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 10, bowl2 = 0, score = 10 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then strike bool being true
            Assert.AreEqual(true, frame.wasStrike);
        }

        [TestMethod]
        public void Given_I_Have_a_frame_with_a_score_of_10_and_a_score_of_0_then_i_will_get_back_spare_bool_false()
        {
            //given i have a frame
            FrameObject frame;
            frame = new FrameObject { bowl1 = 10, bowl2 = 0, score = 10 };
            //when the frame score is calculated
            IDetermineStrikeSpareOpen determineStrikeSpareOpen = new DetermineStrikeSpareOpen();
            frame = determineStrikeSpareOpen.CalculateFrameScore(frame);
            //then spare bool being false
            Assert.AreEqual(false, frame.wasSpare);
        }
    }
}
